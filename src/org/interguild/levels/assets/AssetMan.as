package org.interguild.levels.assets {
	import flash.display.Bitmap;
	import flash.display.BitmapData;
	import flash.media.Sound;
	
	import org.interguild.levels.Level;

	/**
	 * Asset Man appears! His specialty is... to manage assets!
								   @@@@@@@@@@@@@@@@@@@@@@@@
								   @@@@@@@@@@@@@@@@@@@@@@@@
								   @@@@@@@@@@@@@@@@@@@@@@@@
								   @@@@@@@@@@@@@@@@@@@@@@@@
							   @@@@::::::::::::::::::::::::@@@
							   @@@@::::::::::::::::::::::::@@@
							   @@@@::::::::::::::::::::::::@@@
							@@@::::::::::::::::::::::::;;;;:::@@@@
							@@@::::::::::::::::::::::::;;;;:::@@@@
							@@@::::::::::::::::::::::::;;;;:::@@@@
							@@@::::::::::::::::::::::::;;;;:::@@@@
							@@@@@@@@@@@@@@@@@@@@@@@@@@@;;;;;;;::::@@@
							@@@@@@@@@@@@@@@@@@@@@@@@@@@;;;;;;;::::@@@
							@@@@@@@@@@@@@@@@@@@@@@@@@@@;;;;;;;::::@@@
	   @@@@@@@@@@              @@@@@@@@@@@@@@@@@@@@@@@@@@@@;;;;;;;:::@@@@
	   @@@@@@@@@@              @@@@@@@@@@@@@@@@@@@@@@@@@@@@;;;;;;;:::@@@@
	   @@@@@@@@@@              @@@@@@@@@@@@@@@@@@@@@@@@@@@@;;;;;;;:::@@@@
	   @@@@@@@@@@              @@@@@@@@@@@@@@@@@@@@@@@@@@@@;;;;;;;:::@@@@
	@@@;;;;;;;;;;@@@@              @@@@@@@@@@@@@@::::::@@@@@@@;;;;;;;::::@@@
	@@@;;;;;;;;;;@@@@              @@@@@@@@@@@@@@::::::@@@@@@@;;;;;;;::::@@@
	@@@;;;;;;;;;;@@@@              @@@@@@@@@@@@@@::::::@@@@@@@;;;;;;;::::@@@
@@@@;;;;;;;;;;;;;@@@@              @@@@@@@:::::::@@@@@@;;;;@@@@@@@;;;;;;;:::@@@@
@@@@;;;;;;;;;;;;;@@@@              @@@@@@@:::::::@@@@@@;;;;@@@@@@@;;;;;;;:::@@@@
@@@@;;;;;;;;;;;;;@@@@              @@@@@@@:::::::@@@@@@;;;;@@@@@@@;;;;;;;:::@@@@
@@@@;;;;;;;;;;;;;@@@@          @@@@:::@@@@@@@@@@@::::::@@@@;;;@@@@@@@;;;;;;;@@@@   @@@@@@@@@@
@@@@;;;;;;;;;;;;;@@@@          @@@@:::@@@@@@@@@@@::::::@@@@;;;@@@@@@@;;;;;;;@@@@   @@@@@@@@@@
@@@@;;;;;;;;;;;;;@@@@          @@@@:::@@@@@@@@@@@::::::@@@@;;;@@@@@@@;;;;;;;@@@@   @@@@@@@@@@
@@@@;;;;;;;;;;;;;@@@@          @@@@:::@@@@@@@@@@@::::::@@@@;;;@@@@@@@;;;;;;;@@@@   @@@@@@@@@@
@@@@;;;;;;;@@@@@@@@@@       @@@:::::::::::@@@::::::::::::::@@@;;;;@@@@@@@@@@    @@@;;;;;;;;;;@@@@
@@@@;;;;;;;@@@@@@@@@@       @@@:::::::::::@@@::::::::::::::@@@;;;;@@@@@@@@@@    @@@;;;;;;;;;;@@@@
@@@@;;;;;;;@@@@@@@@@@       @@@:::::::::::@@@::::::::::::::@@@;;;;@@@@@@@@@@    @@@;;;;;;;;;;@@@@
	@@@;;;;;;;;;;;;;;@@@    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@;;;;@@@@@@@:::@@@@@@@;;;;;;;;;;@@@@
	@@@;;;;;;;;;;;;;;@@@    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@;;;;@@@@@@@:::@@@@@@@;;;;;;;;;;@@@@
	@@@;;;;;;;;;;;;;;@@@    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@;;;;@@@@@@@:::@@@@@@@;;;;;;;;;;@@@@
	@@@;;;;;;;;;;;;;;@@@    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@;;;;@@@@@@@:::@@@@@@@;;;;;;;;;;@@@@
	@@@;;;;;;;;;;;;;;@@@@@@@@@@    @@@@@@@   @@@@@@@       @@@;;;;@@@@@@@@@@@@@@@@@;;;;;;;;;;;;;;@@@
	@@@;;;;;;;;;;;;;;@@@@@@@@@@    @@@@@@@   @@@@@@@       @@@;;;;@@@@@@@@@@@@@@@@@;;;;;;;;;;;;;;@@@
	@@@;;;;;;;;;;;;;;@@@@@@@@@@    @@@@@@@   @@@@@@@       @@@;;;;@@@@@@@@@@@@@@@@@;;;;;;;;;;;;;;@@@
	   @@@@;;;;;;@@@@@@@:::::::@@@@       ...          ....@@@@@@@@@@:::::::::::@@@;;;;;;;;;;;;;;@@@
	   @@@@;;;;;;@@@@@@@:::::::@@@@       ...          ....@@@@@@@@@@:::::::::::@@@;;;;;;;;;;;;;;@@@
	   @@@@;;;;;;@@@@@@@:::::::@@@@       ...          ....@@@@@@@@@@:::::::::::@@@;;;;;;;;;;;;;;@@@
	   @@@@;;;;;;@@@@@@@:::::::@@@@       ...          ....@@@@@@@@@@:::::::::::@@@;;;;;;;;;;;;;;@@@
		   @@@@@@@@@@@@@;;;;@@@.......@@@@@@@..............@@@@@@@:::;;;;;;;;;;;@@@@@@@@@@@@@;;;;@@@
		   @@@@@@@@@@@@@;;;;@@@.......@@@@@@@..............@@@@@@@:::;;;;;;;;;;;@@@@@@@@@@@@@;;;;@@@
		   @@@@@@@@@@@@@;;;;@@@.......@@@@@@@..............@@@@@@@:::;;;;;;;;;;;@@@@@@@@@@@@@;;;;@@@
			  @@@@@@@@@@;;;;@@@.......@@@@@@@..........@@@@@@@::::;;;;;;;;;;;;;;@@@@@@;;;;;;;@@@@@@@
			  @@@@@@@@@@;;;;@@@.......@@@@@@@..........@@@@@@@::::;;;;;;;;;;;;;;@@@@@@;;;;;;;@@@@@@@
			  @@@@@@@@@@;;;;@@@.......@@@@@@@..........@@@@@@@::::;;;;;;;;;;;;;;@@@@@@;;;;;;;@@@@@@@
			  @@@@@@@@@@;;;;@@@.......@@@@@@@..........@@@@@@@::::;;;;;;;;;;;;;;@@@@@@;;;;;;;@@@@@@@
					 @@@@@@@;;;@@@@.................@@@@@@@:::;;;;;;;;;;;;;;@@@@@@@@@@@@@@@@@@@@@
					 @@@@@@@;;;@@@@.................@@@@@@@:::;;;;;;;;;;;;;;@@@@@@@@@@@@@@@@@@@@@
					 @@@@@@@;;;@@@@.................@@@@@@@:::;;;;;;;;;;;;;;@@@@@@@@@@@@@@@@@@@@@
							@@@::::@@@@@@@@@@@@@@@@@:::::::;;;;;;;;;;@@@@@@@@@@@@@@@@@@@@@@@@
							@@@::::@@@@@@@@@@@@@@@@@:::::::;;;;;;;;;;@@@@@@@@@@@@@@@@@@@@@@@@
							@@@::::@@@@@@@@@@@@@@@@@:::::::;;;;;;;;;;@@@@@@@@@@@@@@@@@@@@@@@@
							@@@::::::::::::::::::::::::;;;;;;;;;;;;;;;;;;@@@
							@@@::::::::::::::::::::::::;;;;;;;;;;;;;;;;;;@@@
							@@@::::::::::::::::::::::::;;;;;;;;;;;;;;;;;;@@@
							@@@::::::::::::::::::::::::;;;;;;;;;;;;;;;;;;@@@
							@@@:::::::@@@@@@@::::::::::;;;;;;;;;;;;;;@@@@@@@
							@@@:::::::@@@@@@@::::::::::;;;;;;;;;;;;;;@@@@@@@
							@@@:::::::@@@@@@@::::::::::;;;;;;;;;;;;;;@@@@@@@
						@@@@@@@::::@@@;;;;:::@@@@::::::;;;;;;;;;;;@@@@@@@@@@@@@@
						@@@@@@@::::@@@;;;;:::@@@@::::::;;;;;;;;;;;@@@@@@@@@@@@@@
						@@@@@@@::::@@@;;;;:::@@@@::::::;;;;;;;;;;;@@@@@@@@@@@@@@
						@@@@@@@::::@@@;;;;:::@@@@::::::;;;;;;;;;;;@@@@@@@@@@@@@@
					 @@@@@@@@@@::::@@@;;;;;;;@@@@::::::;;;;;;;@@@@@@@@@@@@@@@@@@@@@
					 @@@@@@@@@@::::@@@;;;;;;;@@@@::::::;;;;;;;@@@@@@@@@@@@@@@@@@@@@
					 @@@@@@@@@@::::@@@;;;;;;;@@@@::::::;;;;;;;@@@@@@@@@@@@@@@@@@@@@
				 @@@@@@@@@@@@@@:::::::@@@@@@@::::::::::::::@@@@@@@@@@@@@@;;;;;;;@@@
				 @@@@@@@@@@@@@@:::::::@@@@@@@::::::::::::::@@@@@@@@@@@@@@;;;;;;;@@@
				 @@@@@@@@@@@@@@:::::::@@@@@@@::::::::::::::@@@@@@@@@@@@@@;;;;;;;@@@
				 @@@@@@@@@@@@@@:::::::@@@@@@@::::::::::::::@@@@@@@@@@@@@@;;;;;;;@@@
		   @@@@@@;;;;;;;@@@@@@@@@@@:::::::::::::::::@@@@@@@   @@@@@@@;;;;;;;;;;;;;;@@@
		   @@@@@@;;;;;;;@@@@@@@@@@@:::::::::::::::::@@@@@@@   @@@@@@@;;;;;;;;;;;;;;@@@
		   @@@@@@;;;;;;;@@@@@@@@@@@:::::::::::::::::@@@@@@@   @@@@@@@;;;;;;;;;;;;;;@@@
	@@@@@@@;;;;;;;;;;;;;@@@@@@@    @@@@@@@@@@@@@@@@@              @@@;;;;;;;;;;;@@@@@@@@@@
	@@@@@@@;;;;;;;;;;;;;@@@@@@@    @@@@@@@@@@@@@@@@@              @@@;;;;;;;;;;;@@@@@@@@@@
	@@@@@@@;;;;;;;;;;;;;@@@@@@@    @@@@@@@@@@@@@@@@@              @@@;;;;;;;;;;;@@@@@@@@@@
	@@@@@@@;;;;;;;;;;;;;@@@@@@@    @@@@@@@@@@@@@@@@@              @@@;;;;;;;;;;;@@@@@@@@@@
@@@@;;;;;;;;;;;;;;;;;;;;;;;;@@@                               @@@@;;;;;;;;;;;;;;;;;;;;;;;;@@@
@@@@;;;;;;;;;;;;;;;;;;;;;;;;@@@                               @@@@;;;;;;;;;;;;;;;;;;;;;;;;@@@
@@@@;;;;;;;;;;;;;;;;;;;;;;;;@@@                               @@@@;;;;;;;;;;;;;;;;;;;;;;;;@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                               @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                               @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                               @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@                               @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

	 * 
	 * His job is to store all of the level's raw assets, custom content,
	 * and animation frames. He keeps track of all of the ID names, making
	 * sure there are no conflicts while making it easy to find what you're
	 * looking for. 
	 */
	public class AssetMan {

		private var assets:Object;

		private var level:Level;


		public function AssetMan(lvl:Level) {
			level = lvl;

			//initialize assets
			assets = {};
		}


		/**
		 * Registers the ID for an asset.
		 *
		 * Returns true if successful, false if there was an error.
		 *
		 * Errors are added to the level's error log.
		 */
		public function addID(assetID:String):Boolean {
			if (assetID == "none") {
				level.addError("You cannot define assets using the ID of 'none'");
				return false;
			} else if (!assetID || assetID == "") {
				level.addError("You tried to define a new asset without an ID name.");
				return false;
			} else if (assets[assetID] == false) {
				level.addError("You tried to define two different assets under the same ID: '" + assetID + "'");
				return false;
			} else {
				assets[assetID] = false;
				return true;
			}
		}
		
		private function runChecks(id:String, value:Object){
			if (assets[id] == null) {
				throw new Error("Asset ID #" + id + " not registered yet.");
			} else if (assets[id] != false) {
				throw new Error("Asset ID #" + id + " already has data in it!");
			} else if (value == null) {
				throw new Error("AssetMan rejects the addition of a null asset into his list.");
			}
		}


		/**
		 * Assigns a non-null value to the registered id.
		 */
		public function setImage(id:String, value:BitmapData):void {
			runChecks(id, value);
			assets[id] = new Asset(id, value, Asset.IMAGE_ASSET);
		}


		/**
		 * Assigns a non-null value to the registered id.
		 */
		public function setSound(id:String, value:Sound):void {
			runChecks(id, value);
			assets[id] = new Asset(id, value, Asset.SOUND_ASSET);
		}
	}
}
